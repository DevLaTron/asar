name: CMake

on:
  push:
    branches: [ master, asar_2_beta ]
  pull_request:
    branches: [ master, asar_2_beta ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        config: ['windows-default']
        os: ['windows-2019']
        generator: ['']
        toolset: ['']
        exe_ext: ['.exe']
        dll_prefix: ['']
        dll_ext: ['.dll']
        include:
          - config: windows-2019
            os: windows-2019
            generator: '-G "Visual Studio 16 2019"'
            toolset: '-T v142'
          - config: ubuntu-20
            os: ubuntu-20.04
            generator: ''
            toolset: ''
            exe_ext: ''
            dll_prefix: 'lib'
            dll_ext: '.so'
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      run: cmake -S ${{github.workspace}}/src -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{ matrix.generator }} ${{ matrix.toolset }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Create Test Directory
      working-directory: ${{github.workspace}}/build
      # Create temp directory that tests will use
      run: mkdir temp

    - name: App Test
      # Run app test
      run: ${{github.workspace}}/build/asar-tests/asar-app-test${{ matrix.exe_ext }} ${{github.workspace}}/build/asar/asar-standalone{{ matrix.exe_ext }} "${{github.workspace}}/tests" "${{github.workspace}}/dummy_rom.sfc" ${{github.workspace}}/build/temp

    - name: DLL Test
      # Run app test
      run: ${{github.workspace}}/build/asar-tests/asar-dll-test{{ matrix.exe_ext }} ${{github.workspace}}/build/asar/{{ matrix.dll_prefix }}sar{{ matrix.dll_ext }} "${{github.workspace}}/tests" "${{github.workspace}}/dummy_rom.sfc" ${{github.workspace}}/build/temp
      
